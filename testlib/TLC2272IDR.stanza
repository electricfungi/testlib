#use-added-syntax(jitx)
defpackage testlib/TLC2272IDR :
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/defaults
  import ocdb/land-patterns
  import ocdb/generic-components
  import ocdb/symbols
  import ocdb/bundles

pcb-landpattern TID0008ASOIC-8 :
  pad p[1] : smd-pad(0.6, 1.55) at loc(-2.7, 1.905, 90.0) on Top
  pad p[2] : smd-pad(0.6, 1.55) at loc(-2.7, 0.635, 90.0) on Top
  pad p[3] : smd-pad(0.6, 1.55) at loc(-2.7, -0.635, 90.0) on Top
  pad p[4] : smd-pad(0.6, 1.55) at loc(-2.7, -1.905, 90.0) on Top
  pad p[5] : smd-pad(0.6, 1.55) at loc(2.7, -1.905, 90.0) on Top
  pad p[6] : smd-pad(0.6, 1.55) at loc(2.7, -0.635, 90.0) on Top
  pad p[7] : smd-pad(0.6, 1.55) at loc(2.7, 0.635, 90.0) on Top
  pad p[8] : smd-pad(0.6, 1.55) at loc(2.7, 1.905, 90.0) on Top

  layer(Silkscreen("F-SilkS", Top)) = Circle(-2.7, 2.755, 0.125)
  layer(Silkscreen("F-SilkS", Top)) = Circle(-0.573, 1.473, 0.3)
  ; layer(Courtyard(Top)) = Line(0.0, [Point(-3.7, -2.75), Point(-3.7, 2.75)])
  ; layer(Courtyard(Top)) = Line(0.0, [Point(3.7, -2.75), Point(3.7, 2.75)])
  ; layer(Courtyard(Top)) = Line(0.0, [Point(-3.7, 2.75), Point(3.7, 2.75)])
  ; layer(Courtyard(Top)) = Line(0.0, [Point(-3.7, -2.75), Point(3.7, -2.75)])
  ; layer(Courtyard(Top)) = Line(0.0, [Point(-0.5, 0.0), Point(0.5, 0.0)])
  ; layer(Courtyard(Top)) = Line(0.0, [Point(0.0, -0.5), Point(0.0, 0.5)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.254, [Point(-1.6, -2.5), Point(-1.6, 2.5)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.254, [Point(1.6, -2.5), Point(1.6, 2.5)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.254, [Point(-1.6, 2.5), Point(1.6, 2.5)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.254, [Point(-1.6, -2.5), Point(1.6, -2.5)])
  ref-label()

pcb-symbol TLC2272IDR-symbol0 :
  pin OUT[0] at Point(7.62, -5.08) with :
    direction = Right
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  pin p+[0] at Point(0.0, -7.62) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  pin p-[0] at Point(0.0, -2.54) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  layer("foreground") = Text("-", 1.523, SW, loc(1.016, -3.556))
  layer("foreground") = Text("+", 1.523, SW, loc(0.762, -8.89))
  layer("foreground") = Line(1.0, [
    Point(0.0, 0.0), 
    Point(0.0, -10.16), 
    Point(7.62, -5.08), 
    Point(0.0, 0.0)])

pcb-symbol TLC2272IDR-symbol1 :
  pin OUT[1] at Point(7.62, -5.08) with :
    direction = Right
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  pin p+[1] at Point(0.0, -7.62) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  pin p-[1] at Point(0.0, -2.54) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  layer("foreground") = Text("-", 1.523, SW, loc(1.016, -3.556))
  layer("foreground") = Text("+", 1.523, SW, loc(0.762, -8.89))
  layer("foreground") = Line(1.0, [
    Point(0.0, 0.0), 
    Point(0.0, -10.16), 
    Point(7.62, -5.08), 
    Point(0.0, 0.0)])

pcb-symbol TLC2272IDR-symbol2 :
  pin VDD at Point(0.0, -2.54) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  pin VSS at Point(0.0, -10.16) with :
    direction = Left
    length = 5.08
    number-size = 1.523
    name-size = 1.523
  layer("foreground") = Rectangle(7.62, 12.7, loc(3.81, -6.35))

public pcb-component component :
  name = "TLC2272IDR"
  description = "TLC2272IDR"
  manufacturer = "Texas Instruments"
  mpn = "TLC2272IDR"
  pin VDD
  pin VSS
  port p+ : pin[2]
  port p- : pin[2]
  port OUT : pin[2]
  val lp = TID0008ASOIC-8
  landpattern = lp(OUT[0] => lp.p[1], p+[0] => lp.p[3], p-[0] => lp.p[2], OUT[1] => lp.p[7], p+[1] => lp.p[5], p-[1] => lp.p[6], VDD => lp.p[8], VSS => lp.p[4])
  symbol :
    val sym0 = TLC2272IDR-symbol0
    unit(0) = sym0(OUT[0] => sym0.OUT[0], p+[0] => sym0.p+[0], p-[0] => sym0.p-[0])
    val sym1 = TLC2272IDR-symbol1
    unit(1) = sym1(OUT[1] => sym1.OUT[1], p+[1] => sym1.p+[1], p-[1] => sym1.p-[1])
    val sym2 = TLC2272IDR-symbol2
    unit(2) = sym2(VDD => sym2.VDD, VSS => sym2.VSS)
  reference-prefix = "U"

public pcb-module module :
  port power : power
  port p+ : pin[2]
  port p- : pin[2]
  port OUT : pin[2]
  inst opamp : testlib/TLC2272IDR/component
  bypass-cap-strap(opamp.VDD, opamp.VSS, 0.1e-6)
  net (power.vdd opamp.VDD)
  net (power.gnd opamp.VSS)

  net (p+, opamp.p+)
  net (p-, opamp.p-)
  net (OUT, opamp.OUT)